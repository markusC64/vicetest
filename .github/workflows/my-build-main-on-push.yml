name: Snapshot Build
on:
  push:
    branches: '*'
concurrency:
  group: Snapshot Build
  cancel-in-progress: true

jobs:
  build_doc:
    name: Test Headless, Build Documentation
    runs-on: ubuntu-latest
    steps:
      - shell: bash
        run: git config --global core.autocrlf input

      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Install Dependencies
        shell: bash
        run: |
          sudo apt update
          sudo apt-get -y install autoconf automake build-essential byacc flex xa65 dos2unix
          sudo apt-get -y install texinfo texlive-fonts-recommended texlive-latex-extra libpcap-dev

      - name: Build
        id: build
        shell: bash
        run: |
          cd vice
          ./src/buildtools/genvicedate_h.sh
          ./autogen.sh
          ./configure --enable-headlessui --enable-html-docs --without-pulse --without-alsa --without-png --enable-x64
          make

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: vice-pdf
          path: vice/doc/vice.pdf

  build:
    name: Build
    needs: build_doc
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
        - { msystem: MINGW64, arch: x86_64 }
        - { msystem: MINGW32, arch: i686 }
        ui: [ GTK3, SDL2 ]
    steps:
      - run: git config --global core.autocrlf input
        shell: bash

      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Download Documentation
        uses: actions/download-artifact@v3
        with:
          name: vice-pdf
          path: vice/doc/

      - name: Install GTK3 Dependencies if Applicable
        if: ${{ matrix.ui == 'GTK3' }}
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.arch.msystem }}
          update: true
          install: >-
            git
            base-devel
            autotools
            mingw-w64-${{ matrix.arch.arch }}-toolchain
            zip
            p7zip
            subversion
            git
            mingw-w64-${{ matrix.arch.arch }}-pkg-config
            mingw-w64-${{ matrix.arch.arch }}-ntldd
            mingw-w64-${{ matrix.arch.arch }}-glew
            mingw-w64-${{ matrix.arch.arch }}-giflib
            mingw-w64-${{ matrix.arch.arch }}-lame
            mingw-w64-${{ matrix.arch.arch }}-libvorbis
            mingw-w64-${{ matrix.arch.arch }}-flac
            mingw-w64-${{ matrix.arch.arch }}-icoutils
            mingw-w64-${{ matrix.arch.arch }}-ffmpeg
            mingw-w64-${{ matrix.arch.arch }}-libpcap
            mingw-w64-${{ matrix.arch.arch }}-gtk3

      - name: Downgrade Pango to 1.50.11
        if: ${{ matrix.ui == 'GTK3' }}
        shell: msys2 {0}
        run: |
          pacman --noconfirm -U https://repo.msys2.org/mingw/mingw64/mingw-w64-x86_64-pango-1.50.11-1-any.pkg.tar.zst

      - name: Install SDL2 Dependencies if Applicable
        if: ${{ matrix.ui == 'SDL2' }}
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.arch.msystem }}
          update: true
          install: >-
            git
            base-devel
            autotools
            mingw-w64-${{ matrix.arch.arch }}-toolchain
            zip
            p7zip
            subversion
            git
            mingw-w64-${{ matrix.arch.arch }}-pkg-config
            mingw-w64-${{ matrix.arch.arch }}-ntldd
            mingw-w64-${{ matrix.arch.arch }}-glew
            mingw-w64-${{ matrix.arch.arch }}-giflib
            mingw-w64-${{ matrix.arch.arch }}-lame
            mingw-w64-${{ matrix.arch.arch }}-libvorbis
            mingw-w64-${{ matrix.arch.arch }}-flac
            mingw-w64-${{ matrix.arch.arch }}-icoutils
            mingw-w64-${{ matrix.arch.arch }}-ffmpeg
            mingw-w64-${{ matrix.arch.arch }}-libpcap
            mingw-w64-${{ matrix.arch.arch }}-SDL2
            mingw-w64-${{ matrix.arch.arch }}-SDL2_image

      - name: Build
        id: build
        shell: msys2 {0}
        run: |
          MINGW_INSTALLS=${{ matrix.arch.msystem }} ./vice/build/github-actions/build-msys2.sh ${{ matrix.ui }} "$(echo "${{ github.ref }}" | sed 's,.*/,,')"
          echo "zip_path=$(cygpath -w -a vice/*.zip)"       >> $GITHUB_OUTPUT
          echo "zip_name=$(basename vice/*.zip)"            >> $GITHUB_OUTPUT
          echo "seven_zip_path=$(cygpath -w -a vice/*.7z)"  >> $GITHUB_OUTPUT
          echo "seven_zip_name=$(basename vice/*.7z)"       >> $GITHUB_OUTPUT

      - name: Upload Zip
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build.outputs.zip_name }}
          path: ${{ steps.build.outputs.zip_path }}

      - name: Upload 7Zip
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build.outputs.seven_zip_name }}
          path: ${{ steps.build.outputs.seven_zip_path }}
